---
import { getLangFromUrl, useTranslations } from '../i18n/ui';
import { getCollection } from 'astro:content';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get current URL path to determine if we're on a post page
const currentPath = Astro.url.pathname;

// Check if we're on a post page and get the translated version
let translatedUrl = '';
if (currentPath.includes('/posts/')) {
  const allPosts = await getCollection('posts');
  const currentSlug = currentPath.split('/posts/')[1]?.replace(/\/$/, '');
  
  if (currentSlug) {
    const currentPost = allPosts.find(post => post.slug === currentSlug);
    if (currentPost) {
      if (lang === 'en' && currentPost.data.esSlug) {
        translatedUrl = `/es/posts/${currentPost.data.esSlug}/`;
      } else if (lang === 'es' && currentPost.data.enSlug) {
        translatedUrl = `/posts/${currentPost.data.enSlug}/`;
      }
    }
  }
}

// Default URLs for non-post pages
const defaultUrls = {
  en: '/',
  es: '/es/'
};
---

<div class="language-switcher">
  <button
    id="language-toggle"
    class="bs-btn !px-4 flex items-center justify-center"
    aria-label="Toggle language"
    aria-expanded="false"
  >
    <span class="text-sm font-semibold">{lang.toUpperCase()}</span>
  </button>
  
  <div
    id="language-menu"
    class="absolute top-full right-0 mt-2 bg-bs-surface-0 border border-bs-surface-3 rounded-lg shadow-lg opacity-0 pointer-events-none transition-all duration-200 z-50"
    role="menu"
    aria-labelledby="language-toggle"
  >
    <a
      href={lang === 'en' ? translatedUrl || defaultUrls.en : defaultUrls.en}
      data-lang="en"
      class:list={[
        'block px-4 py-2 text-sm hover:bg-bs-surface-1 transition-colors',
        { 'bg-bs-surface-1': lang === 'en' }
      ]}
      role="menuitem"
    >
      English
    </a>
    <a
      href={lang === 'es' ? translatedUrl || defaultUrls.es : defaultUrls.es}
      data-lang="es"
      class:list={[
        'block px-4 py-2 text-sm hover:bg-bs-surface-1 transition-colors',
        { 'bg-bs-surface-1': lang === 'es' }
      ]}
      role="menuitem"
    >
      Espa√±ol
    </a>
  </div>
</div>

<script>
  const toggle = document.getElementById('language-toggle');
  const menu = document.getElementById('language-menu');
  const links = menu?.querySelectorAll('a[data-lang]') as NodeListOf<HTMLAnchorElement> | undefined;
  
  if (toggle && menu) {
    toggle.addEventListener('click', () => {
      const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
      toggle.setAttribute('aria-expanded', (!isExpanded).toString());
      
      if (isExpanded) {
        menu.classList.add('opacity-0', 'pointer-events-none');
      } else {
        menu.classList.remove('opacity-0', 'pointer-events-none');
      }
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!toggle.contains(e.target as Node) && !menu.contains(e.target as Node)) {
        toggle.setAttribute('aria-expanded', 'false');
        menu.classList.add('opacity-0', 'pointer-events-none');
      }
    });

    // Ensure language cookie is set before navigating
    if (links) {
      links.forEach((link) => {
        link.addEventListener('click', (e) => {
          const lang = link.getAttribute('data-lang');
          if (!lang) return;
          e.preventDefault();
          // Persist language preference for 1 year
          document.cookie = `lang=${lang}; Path=/; Max-Age=31536000; SameSite=Lax`;
          window.location.assign(link.href);
        });
      });
    }
  }
</script>

<style>
  .language-switcher {
    position: relative;
  }
</style>

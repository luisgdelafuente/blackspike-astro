---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from 'astro:content';
import { getLangFromUrl } from '../../i18n/ui';

// Get all posts and sort by date
const allPosts = await getCollection('posts');
const posts = allPosts
  .filter(post => post.data.lang === 'en')
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Pagination setup
const postsPerPage = 10;
const currentPage = 1; // For now, we'll implement dynamic pagination later
const totalPages = Math.ceil(posts.length / postsPerPage);
const startIndex = (currentPage - 1) * postsPerPage;
const endIndex = startIndex + postsPerPage;
const currentPosts = posts.slice(startIndex, endIndex);

// Get unique tags for filtering
const allTags = [...new Set(posts.flatMap(post => post.data.tags))];

const lang = getLangFromUrl(Astro.url);
---

<Layout title="Blog Posts | Frontier Agency" description="Latest insights, news, and updates from Frontier Agency">
  <div class="container mx-auto px-4 py-16">
    <!-- Header -->
    <div class="text-center mb-16">
      <h1 class="text-4xl md:text-5xl font-bold mb-6">Blog Posts</h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Latest insights, news, and updates from our team
      </p>
    </div>

    <!-- Tags Filter -->
    <div class="mb-12">
      <div class="flex flex-wrap gap-2 justify-center">
        <a href="/posts/" class="px-4 py-2 bg-blue-600 text-white rounded-full text-sm hover:bg-blue-700 transition-colors">
          All Posts
        </a>
        {allTags.map(tag => (
          <a href={`/posts/tag/${tag}/`} class="px-4 py-2 bg-gray-200 text-gray-800 rounded-full text-sm hover:bg-gray-300 transition-colors">
            {tag}
          </a>
        ))}
      </div>
    </div>

    <!-- Posts Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
      {currentPosts.map(post => (
        <article class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
          {post.data.image && (
            <div class="aspect-video overflow-hidden">
              <img 
                src={post.data.image} 
                alt={post.data.title}
                class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
              />
            </div>
          )}
          <div class="p-6">
            <div class="flex items-center gap-2 mb-3">
              {post.data.tags.slice(0, 2).map(tag => (
                <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
                  {tag}
                </span>
              ))}
            </div>
            <h2 class="text-xl font-bold mb-3 line-clamp-2">
              <a href={`/posts/${post.slug}/`} class="hover:text-blue-600 transition-colors">
                {post.data.title}
              </a>
            </h2>
            <p class="text-gray-600 mb-4 line-clamp-3">
              {post.data.description}
            </p>
            <div class="flex items-center justify-between text-sm text-gray-500">
              <span>{post.data.author}</span>
              <time datetime={post.data.date.toISOString()}>
                {post.data.date.toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}
              </time>
            </div>
          </div>
        </article>
      ))}
    </div>

    <!-- Pagination -->
    {totalPages > 1 && (
      <div class="flex justify-center items-center gap-2">
        {currentPage > 1 && (
          <a href={`/posts/?page=${currentPage - 1}`} class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors">
            Previous
          </a>
        )}
        
        {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (
          <a 
            href={`/posts/?page=${page}`} 
            class={`px-4 py-2 rounded transition-colors ${
              page === currentPage 
                ? 'bg-blue-600 text-white' 
                : 'bg-gray-200 text-gray-800 hover:bg-gray-300'
            }`}
          >
            {page}
          </a>
        ))}
        
        {currentPage < totalPages && (
          <a href={`/posts/?page=${currentPage + 1}`} class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors">
            Next
          </a>
        )}
      </div>
    )}

    <!-- No posts message -->
    {currentPosts.length === 0 && (
      <div class="text-center py-16">
        <h3 class="text-2xl font-bold mb-4">No posts found</h3>
        <p class="text-gray-600">Check back soon for new content!</p>
      </div>
    )}
  </div>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
